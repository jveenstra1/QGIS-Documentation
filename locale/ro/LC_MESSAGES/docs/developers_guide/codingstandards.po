# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# Sorin Călinică <scalinica@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-10 11:07+0200\n"
"PO-Revision-Date: 2020-03-16 19:24+0000\n"
"Last-Translator: Sorin Călinică <scalinica@gmail.com>, 2020\n"
"Language-Team: Romanian (https://www.transifex.com/qgis/teams/6144/ro/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ro\n"
"Plural-Forms: nplurals=3; plural=(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1));\n"

#: ../../docs/developers_guide/codingstandards.rst:5
msgid "QGIS Coding Standards"
msgstr "Standardele de codificare QGIS"

#: ../../docs/developers_guide/codingstandards.rst:10
msgid "These standards should be followed by all QGIS developers."
msgstr ""
"Aceste standarde ar trebui să fie urmate de către toți dezvoltatorii QGIS."

#: ../../docs/developers_guide/codingstandards.rst:13
msgid "Classes"
msgstr "Clase"

#: ../../docs/developers_guide/codingstandards.rst:17
#: ../../docs/developers_guide/codingstandards.rst:212
msgid "Names"
msgstr "Nume"

#: ../../docs/developers_guide/codingstandards.rst:19
msgid "Class in QGIS begin with Qgs and are formed using camel case."
msgstr ""
"Clasele din QGIS sunt prefixate cu Qgs, iar fiecare cuvânt începe cu "
"majusculă."

#: ../../docs/developers_guide/codingstandards.rst:21
#: ../../docs/developers_guide/codingstandards.rst:191
#: ../../docs/developers_guide/codingstandards.rst:263
msgid "Examples:"
msgstr "Exemple:"

#: ../../docs/developers_guide/codingstandards.rst:23
msgid "``QgsPoint``"
msgstr "``QgsPoint``"

#: ../../docs/developers_guide/codingstandards.rst:24
msgid "``QgsMapCanvas``"
msgstr "``QgsMapCanvas``"

#: ../../docs/developers_guide/codingstandards.rst:25
msgid "``QgsRasterLayer``"
msgstr "``QgsRasterLayer``"

#: ../../docs/developers_guide/codingstandards.rst:29
msgid "Members"
msgstr "Membri"

#: ../../docs/developers_guide/codingstandards.rst:32
msgid ""
"Class member names begin with a lower case m and are formed using mixed "
"case."
msgstr ""
"Denumirile membrilor claselor sunt prefixate cu litera m și sunt formate "
"utilizând majuscule și minuscule."

#: ../../docs/developers_guide/codingstandards.rst:35
msgid "``mMapCanvas``"
msgstr "``mMapCanvas``"

#: ../../docs/developers_guide/codingstandards.rst:36
msgid "``mCurrentExtent``"
msgstr "``mCurrentExtent``"

#: ../../docs/developers_guide/codingstandards.rst:38
msgid ""
"All class members should be private. Public class members are STRONGLY "
"discouraged. Protected members should be avoided when the member may need to"
" be accessed from Python subclasses, since protected members cannot be used "
"from the Python bindings."
msgstr ""
"Toți membrii claselor ar trebui să fie privați. Membrii publici sunt TOTAL "
"nerecomandați. Membrii protejați ar trebui să fie evitați când membrul ar "
"putea fi accesat din subclase Python, de vreme ce membrii protejați nu pot "
"fi utilizați din legăturile Python."

#: ../../docs/developers_guide/codingstandards.rst:43
msgid ""
"Mutable static class member names should begin with a lower case ``s``, but "
"constant static class member names should be all caps:"
msgstr ""
"Numele membrilor statici și mutabili ai claselor ar trebui să înceapă cu un "
"``s`` mic, în schimb numele membrilor statici constanți ar trebui să aibă "
"toate literele mari:"

#: ../../docs/developers_guide/codingstandards.rst:46
msgid "``sRefCounter``"
msgstr "``sRefCounter``"

#: ../../docs/developers_guide/codingstandards.rst:47
msgid "``DEFAULT_QUEUE_SIZE``"
msgstr "``DEFAULT_QUEUE_SIZE``"

#: ../../docs/developers_guide/codingstandards.rst:51
msgid "Accessor Functions"
msgstr "Funcțiile Accesor"

#: ../../docs/developers_guide/codingstandards.rst:54
msgid ""
"Class member values should be obtained through accesssor functions. The "
"function should be named without a get prefix. Accessor functions for the "
"two private members above would be:"
msgstr ""
"Valorile membrilor unei clase vor fi obținute prin intermediul funcțiilor "
"accesor. Numele acestora nu ar trebui să înceapă cu prefixul \"get\". "
"Funcțiile accesor pentru cei doi membri privați de mai sus ar putea fi:"

#: ../../docs/developers_guide/codingstandards.rst:58
msgid "``mapCanvas()``"
msgstr "``mapCanvas()``"

#: ../../docs/developers_guide/codingstandards.rst:59
msgid "``currentExtent()``"
msgstr "``currentExtent()``"

#: ../../docs/developers_guide/codingstandards.rst:61
msgid ""
"Ensure that accessors are correctly marked with ``const``. Where "
"appropriate, this may require that cached value type member variables are "
"marked with ``mutable``."
msgstr ""
"Asigurați-vă că accesoriile sunt corect marcate cu ``const``. Atunci când "
"este cazul, este posibil ca variabilele membru, de tip cache de valoare, să "
"fie marcate cu ``mutable``."

#: ../../docs/developers_guide/codingstandards.rst:66
msgid "Functions"
msgstr "Funcții"

#: ../../docs/developers_guide/codingstandards.rst:69
msgid ""
"Function names begin with a lowercase letter and are formed using mixed "
"case. The function name should convey something about the purpose of the "
"function."
msgstr ""
"Numele funcțiilor încep cu literă mică și conțin majuscule și minuscule. "
"Numele funcțiilor ar trebui să indice scopul acestora."

#: ../../docs/developers_guide/codingstandards.rst:72
msgid "``updateMapExtent()``"
msgstr "``updateMapExtent()``"

#: ../../docs/developers_guide/codingstandards.rst:73
msgid "``setUserOptions()``"
msgstr "``setUserOptions()``"

#: ../../docs/developers_guide/codingstandards.rst:75
msgid ""
"For consistency with the existing QGIS API and with the Qt API, "
"abbreviations should be avoided. E.g. ``setDestinationSize`` instead of "
"``setDestSize``, ``setMaximumValue`` instead of ``setMaxVal``."
msgstr ""
"În concordanță cu API-urile QGIS și Qt, ar trebui evitate abrevierile. De "
"exemplu: ``setDestinationSize`` în loc de ``setDestSize``, "
"``setMaximumValue`` în loc de ``setMaxVal``."

#: ../../docs/developers_guide/codingstandards.rst:79
msgid ""
"Acronyms should also be camel cased for consistency. E.g. ``setXml`` instead"
" of ``setXML``."
msgstr ""
"De asemenea, acronimele ar trebui să fie denumite folosind CamelCase. De "
"exemplu: ``setXml`` în loc de ``setXML``."

#: ../../docs/developers_guide/codingstandards.rst:84
msgid "Function Arguments"
msgstr "Argumente ale funcțiilor"

#: ../../docs/developers_guide/codingstandards.rst:87
msgid ""
"Function arguments should use descriptive names. Do not use single letter "
"arguments (e.g. ``setColor( const QColor& color )`` instead of ``setColor( "
"const QColor& c )``)."
msgstr ""
"Argumentele funcțiilor ar trebui să utilizeze nume descriptive. Nu utilizați"
" argumente cu nume format dintr-o singură literă (ex. ``setColor( const "
"QColor& color )`` în loc de ``setColor( const QColor& c )``)."

#: ../../docs/developers_guide/codingstandards.rst:91
msgid ""
"Pay careful attention to when arguments should be passed by reference. "
"Unless argument objects are small and trivially copied (such as QPoint "
"objects), they should be passed by const reference. For consistency with the"
" Qt API, even implicitly shared objects are passed by const reference (e.g. "
"``setTitle( const QString& title )`` instead of ``setTitle( QString title "
")``."
msgstr ""
"Acordați o atenție deosebită momentului când argumentele ar trebui să fie "
"transmise prin referință. Cu excepția cazului în care obiectele argumentului"
" nu au dimensiuni mari și sunt trivial de copiat (cum ar fi obiectele "
"QPoint), ele ar trebui să fie transmise prin referințe constante. Pentru "
"concordanța cu API-ul Qt, chiar și obiectele partajate în mod implicit sunt "
"transmise prin referințe constante (ex.: ``setTitle( const QString& title "
")`` în loc de ``setTitle( QString title )``."

#: ../../docs/developers_guide/codingstandards.rst:100
msgid "Function Return Values"
msgstr "Valorile Returnate de Funcție"

#: ../../docs/developers_guide/codingstandards.rst:102
msgid ""
"Return small and trivially copied objects as values. Larger objects should "
"be returned by const reference. The one exception to this is implicitly "
"shared objects, which are always returned by value. Return ``QObject`` or "
"subclassed objects as pointers."
msgstr ""
"Returnați ca valori obiectele mici și trivial copiate. Obiectele mai mari ar"
" trebui returnate prin referințe constante. Singura excepție o reprezintă "
"obiectele partajate în mod implicit, care sunt întotdeauna returnate prin "
"valoare. Returnați ca pointeri ``QObject`` sau obiectele subclasate."

#: ../../docs/developers_guide/codingstandards.rst:107
msgid "``int maximumValue() const``"
msgstr "``int maximumValue() const``"

#: ../../docs/developers_guide/codingstandards.rst:108
msgid "``const LayerSet& layers() const``"
msgstr "``const LayerSet& layers() const``"

#: ../../docs/developers_guide/codingstandards.rst:109
msgid "``QString title() const`` (``QString`` is implicitly shared)"
msgstr ""
"``QString title() const`` (``QString`` este, în mod implicit, partajat)"

#: ../../docs/developers_guide/codingstandards.rst:110
msgid ""
"``QList< QgsMapLayer* > layers() const`` (``QList`` is implicitly shared)"
msgstr ""
"``QList< QgsMapLayer* > layers() const`` (``QList`` este, în mod implicit, "
"partajat)"

#: ../../docs/developers_guide/codingstandards.rst:111
msgid ""
"``QgsVectorLayer *layer() const;`` (``QgsVectorLayer`` inherits ``QObject``)"
msgstr ""
"``QgsVectorLayer *layer() const;`` (``QgsVectorLayer`` inherits ``QObject``)"

#: ../../docs/developers_guide/codingstandards.rst:112
msgid ""
"``QgsAbstractGeometry *geometry() const;`` (``QgsAbstractGeometry`` is "
"abstract and will probably need to be casted)"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:117
msgid "API Documentation"
msgstr "Documentația API"

#: ../../docs/developers_guide/codingstandards.rst:119
msgid ""
"It is required to write API documentation for every class, method, enum and "
"other code that is available in the public API."
msgstr ""
"Este necesar să elaborați documentația API pentru fiecare clasă, metodă, "
"enumerație și alt cod care este disponibil în API-ul public."

#: ../../docs/developers_guide/codingstandards.rst:122
msgid ""
"QGIS uses Doxygen for documentation. Write descriptive and meaningful "
"comments that give a reader information about what to expect, what happens "
"in edge cases and give hints about other interfaces he could be looking for,"
" best practices and code samples."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:128
msgid "Methods"
msgstr "Metodele"

#: ../../docs/developers_guide/codingstandards.rst:130
msgid ""
"Method descriptions should be written in a descriptive form, using the 3rd "
"person. Methods require a ``\\since`` tag that defines when they have been "
"introduced. You should add additional ``\\since`` tags for important changes"
" that were introduced later on."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:151
msgid "Members Variables"
msgstr "Variabilele Membru"

#: ../../docs/developers_guide/codingstandards.rst:153
msgid ""
"Member variables should normally be in the ``private`` section and made "
"available via getters and setters. One exception to this is for data "
"containers like for error reporting. In such cases do not prefix the member "
"with an ``m``."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:183
msgid "Qt Designer"
msgstr "Qt Designer"

#: ../../docs/developers_guide/codingstandards.rst:186
msgid "Generated Classes"
msgstr "Clasele Generate"

#: ../../docs/developers_guide/codingstandards.rst:188
msgid ""
"QGIS classes that are generated from Qt Designer (ui) files should have a "
"Base suffix. This identifies the class as a generated base class."
msgstr ""
"Clasele QGIS care sunt generate în fișierele produse de Qt Designer (UI) ar "
"trebui să aibă sufixul Base. Acest lucru identifică o clasă de bază, "
"generată."

#: ../../docs/developers_guide/codingstandards.rst:193
msgid "``QgsPluginManagerBase``"
msgstr "``QgsPluginManagerBase``"

#: ../../docs/developers_guide/codingstandards.rst:194
msgid "``QgsUserOptionsBase``"
msgstr "``QgsUserOptionsBase``"

#: ../../docs/developers_guide/codingstandards.rst:198
msgid "Dialogs"
msgstr "Dialoguri"

#: ../../docs/developers_guide/codingstandards.rst:200
msgid ""
"All dialogs should implement tooltip help for all toolbar icons and other "
"relevant widgets. Tooltips add greatly to feature discoverability for both "
"new and experienced users."
msgstr ""
"Toate dialogurile ar trebui să implementeze ajutorul pentru toate "
"pictogramele barei de instrumente și alte controale grafice relevante. "
"Baloanele cu indicii adaugă foarte mult la descoperirea caracteristicilor, "
"atât pentru utilizatorii noi, cât și pentru cei experimentați."

#: ../../docs/developers_guide/codingstandards.rst:204
msgid ""
"Ensure that the tab order for widgets is updated whenever the layout of a "
"dialog changes."
msgstr ""
"Asigurați-vă că ordinea filelor pentru controalele grafice este actualizată "
"ori de câte ori se modifică aspectul unui dialog."

#: ../../docs/developers_guide/codingstandards.rst:209
msgid "C++ Files"
msgstr "Fișierele C++"

#: ../../docs/developers_guide/codingstandards.rst:214
msgid ""
"C++ implementation and header files should have a .cpp and .h extension "
"respectively. Filename should be all lowercase and, in the case of classes, "
"match the class name."
msgstr ""
"Fișierele antet și de implementare C++ ar trebui să aibă extensiile .h, "
"respectiv .cpp. Numele de fișier ar trebui să conțină doar litere mici și, "
"în cazul claselor, să se potrivească numelui clasei."

#: ../../docs/developers_guide/codingstandards.rst:218
msgid ""
"Example: Class ``QgsFeatureAttribute`` source files are "
":file:`qgsfeatureattribute.cpp` and :file:`qgsfeatureattribute.h`"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:222
msgid ""
"In case it is not clear from the statement above, for a filename to match a "
"class name it implicitly means that each class should be declared and "
"implemented in its own file. This makes it much easier for newcomers to "
"identify where the code is relating to specific class."
msgstr ""
"În cazul în care nu este clară indicația de mai sus, cerința ca numele de "
"fișier să se potrivească numelui de clasă, arată că, implicit, fiecare clasă"
" trebuie să fie declarată și implementată în propriul fișier. Acest lucru "
"facilitează nou-veniților identificarea codului care este specific anumitor "
"clase."

#: ../../docs/developers_guide/codingstandards.rst:229
msgid "Standard Header and License"
msgstr "Antetul Standard și Licența"

#: ../../docs/developers_guide/codingstandards.rst:231
msgid ""
"Each source file should contain a header section patterned after the "
"following example:"
msgstr ""
"Fiecare fișier sursă trebuie să conțină o secțiune antet, în conformitate cu"
" exemplul următor:"

#: ../../docs/developers_guide/codingstandards.rst:251
msgid ""
"There is a template for Qt Creator in git. To use it, copy it from "
":file:`doc/qt_creator_license_template` to a local location, adjust the mail"
" address and - if required - the name and configure QtCreator to use it: "
":menuselection:`Tools --> Options --> C++ --> File Naming`."
msgstr ""
"Există un șablon pentru Qt Creator în git. Pentru a-l utiliza, copiați-l din"
" :file:`doc/qt_creator_license_template` într-un dosar local, ajustați "
"adresa e-mail și numele - dacă este necesar - apoi configurați QtCreator "
"pentru a-l folosi: :menuselection:`Instrumente --> Opțiuni --> C++ --> "
"Denumirea Fișierului`."

#: ../../docs/developers_guide/codingstandards.rst:258
msgid "Variable Names"
msgstr "Numele Variabilei"

#: ../../docs/developers_guide/codingstandards.rst:260
msgid ""
"Local variable names begin with a lower case letter and are formed using "
"mixed case. Do not use prefixes like ``my`` or ``the``."
msgstr ""
"Numele variabilelor locale încep cu o literă mică, utilizând majuscule și "
"minuscule. Nu folosiți prefixe precum ``my`` sau ``the``."

#: ../../docs/developers_guide/codingstandards.rst:265
msgid "``mapCanvas``"
msgstr "``mapCanvas``"

#: ../../docs/developers_guide/codingstandards.rst:266
msgid "``currentExtent``"
msgstr "``currentExtent``"

#: ../../docs/developers_guide/codingstandards.rst:270
msgid "Enumerated Types"
msgstr "Tipurile Enumerate"

#: ../../docs/developers_guide/codingstandards.rst:272
msgid ""
"Enumerated types should be named in CamelCase with a leading capital e.g.:"
msgstr ""
"Tipurile enumerate ar trebui să fie denumite folosind CamelCase, începând cu"
" o majusculă, de ex.:"

#: ../../docs/developers_guide/codingstandards.rst:284
msgid ""
"Do not use generic type names that will conflict with other types. e.g. use "
"``UnkownUnit`` rather than ``Unknown``"
msgstr ""
"Nu utilizați tipuri de nume generice, care vor intra în conflict cu alte "
"tipuri. De ex., folosiți mai degrabă ``UnkownUnit`` decât ``Unknown``"

#: ../../docs/developers_guide/codingstandards.rst:288
msgid "Global Constants & Macros"
msgstr "Constantele locale și Comenzile Macro"

#: ../../docs/developers_guide/codingstandards.rst:290
msgid ""
"Global constants and macros should be written in upper case underscore "
"separated e.g.:"
msgstr ""
"Constantele locale și comenzile macro ar trebui să fie scrise cu majuscule, "
"separate cu ajutorul caracterului de subliniere, de ex .:"

#: ../../docs/developers_guide/codingstandards.rst:298
msgid "Comments"
msgstr "Comentarii"

#: ../../docs/developers_guide/codingstandards.rst:300
msgid ""
"Comments to class methods should use a third person indicative style instead"
" of the imperative style:"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:313
msgid "Qt Signals and Slots"
msgstr "Semnale și Sloturi Qt"

#: ../../docs/developers_guide/codingstandards.rst:315
msgid ""
"All signal/slot connects should be made using the \"new style\" connects "
"available in Qt5. Futher information on this requirement is available in "
"`QEP #77 <https://github.com/qgis/QGIS-Enhancement-Proposals/issues/77>`_."
msgstr ""
"Toate conexiunile la semnale/sloturi ar trebui să fie făcute folosindu-se "
"legăturile de \"stil nou\" disponibile în Qt5. Informații suplimentare "
"privind această cerință sunt disponibile în `QEP #77 "
"<https://github.com/qgis/QGIS-Enhancement-Proposals/issues/77>`_."

#: ../../docs/developers_guide/codingstandards.rst:319
msgid ""
"Avoid use of Qt auto connect slots (i.e. those named ``void "
"on_mSpinBox_valueChanged``). Auto connect slots are fragile and prone to "
"breakage without warning if dialogs are refactored."
msgstr ""
"Evitați folosirea sloturilor cu autoconectare QT (adică pe acelea denumite "
"``void on_mSpinBox_valueChanged``). Sloturile cu autoconectare sunt fragile "
"și predispuse la întrerupere, fără avertisment, dacă dialogurile sunt "
"refactorizate."

#: ../../docs/developers_guide/codingstandards.rst:325
msgid "Editing"
msgstr "Editarea"

#: ../../docs/developers_guide/codingstandards.rst:327
msgid ""
"Any text editor/IDE can be used to edit QGIS code, providing the following "
"requirements are met."
msgstr ""
"Orice editor de text/IDE poate fi folosit pentru a edita codul QGIS, oferind"
" garanția că sunt îndeplinite următoarele cerințe."

#: ../../docs/developers_guide/codingstandards.rst:331
msgid "Tabs"
msgstr "Caracterele TAB"

#: ../../docs/developers_guide/codingstandards.rst:333
msgid ""
"Set your editor to emulate tabs with spaces. Tab spacing should be set to 2 "
"spaces."
msgstr ""
"Setați în editorul dvs. emularea TAB-ului cu ajutotul spațiilor albe. Ar "
"trebui folosite în acest scop 2 spații."

#: ../../docs/developers_guide/codingstandards.rst:336
msgid "In vim this is done with ``set expandtab ts=2``"
msgstr "În vim, acest lucru se realizează prin comanda ``set expandtab ts=2``"

#: ../../docs/developers_guide/codingstandards.rst:339
msgid "Indentation"
msgstr "Indentarea"

#: ../../docs/developers_guide/codingstandards.rst:341
msgid ""
"Source code should be indented to improve readability. There is a "
":file:`scripts/prepare-commit.sh` that looks up the changed files and "
"reindents them using astyle. This should be run before committing. You can "
"also use :file:`scripts/astyle.sh` to indent individual files."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:346
msgid ""
"As newer versions of astyle indent differently than the version used to do a"
" complete reindentation of the source, the script uses an old astyle "
"version, that we include in our repository (enable ``WITH_ASTYLE`` in cmake "
"to include it in the build)."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:352
msgid "Braces"
msgstr "Acoladele"

#: ../../docs/developers_guide/codingstandards.rst:354
msgid "Braces should start on the line following the expression:"
msgstr "Acoladele ar trebui să fie poziționate pe linia următoare expresiei:"

#: ../../docs/developers_guide/codingstandards.rst:370
msgid "API Compatibility"
msgstr "Compatibilitatea API-ului"

#: ../../docs/developers_guide/codingstandards.rst:372
msgid "There is :api:`API documentation <>` for C++."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:374
msgid ""
"We try to keep the API stable and backwards compatible. Cleanups to the API "
"should be done in a manner similar to the Qt sourcecode e.g."
msgstr ""
"Încercăm să păstrăm API-ul stabil și compatibil cu versiunile anterioare. "
"Curățarea API-ului ar trebui să fie făcută într-un mod similar cu al codului"
" sursă Qt, de ex.:"

#: ../../docs/developers_guide/codingstandards.rst:414
msgid "SIP Bindings"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:416
msgid ""
"Some of the SIP files are automatically generated using a dedicated script."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:420
msgid "Header pre-processing"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:423
msgid ""
"All the information to properly build the SIP file must be found in the C++ "
"header file. Some macros are available for such definition:"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:426
msgid ""
"Use ``#ifdef SIP_RUN`` to generate code only in SIP files or ``#ifndef "
"SIP_RUN`` for C++ code only. ``#else`` statements are handled in both cases."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:429
msgid "Use ``SIP_SKIP`` to discard a line"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:430
msgid "The following annotations are handled:"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:432
msgid "``SIP_FACTORY``: ``/Factory/``"
msgstr "``SIP_FACTORY``: ``/Factory/``"

#: ../../docs/developers_guide/codingstandards.rst:433
msgid "``SIP_OUT``: ``/Out/``"
msgstr "``SIP_OUT``: ``/Out/``"

#: ../../docs/developers_guide/codingstandards.rst:434
msgid "``SIP_INOUT``: ``/In,Out/``"
msgstr "``SIP_INOUT``: ``/In,Out/``"

#: ../../docs/developers_guide/codingstandards.rst:435
msgid "``SIP_TRANSFER``: ``/Transfer/``"
msgstr "``SIP_TRANSFER``: ``/Transfer/``"

#: ../../docs/developers_guide/codingstandards.rst:436
msgid "``SIP_PYNAME(name)``: ``/PyName=name/``"
msgstr "``SIP_PYNAME(name)``: ``/PyName=name/``"

#: ../../docs/developers_guide/codingstandards.rst:437
msgid "``SIP_KEEPREFERENCE``: ``/KeepReference/``"
msgstr "``SIP_KEEPREFERENCE``: ``/KeepReference/``"

#: ../../docs/developers_guide/codingstandards.rst:438
msgid "``SIP_TRANSFERTHIS``: ``/TransferThis/``"
msgstr "``SIP_TRANSFERTHIS``: ``/TransferThis/``"

#: ../../docs/developers_guide/codingstandards.rst:439
msgid "``SIP_TRANSFERBACK``: ``/TransferBack/``"
msgstr "``SIP_TRANSFERBACK``: ``/TransferBack/``"

#: ../../docs/developers_guide/codingstandards.rst:441
msgid ""
"``private`` sections are not displayed, except if you use a ``#ifdef "
"SIP_RUN`` statement in this block."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:443
msgid ""
"``SIP_PYDEFAULTVALUE(value)`` can be used to define an alternative default "
"value of the python method. If the default value contains a comma ``,``, the"
" value should be surrounded by single quotes ``'``"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:446
msgid ""
"``SIP_PYTYPE(type)`` can be used to define an alternative type for an "
"argument of the python method. If the type contains a comma ``,``, the type "
"should be surrounded by single quotes ``'``"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:450
msgid "A demo file can be found in :file:`tests/scripts/sipifyheader.h`."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:453
msgid "Generating the SIP file"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:455
msgid "The SIP file can be generated using a dedicated script. For instance:"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:462
msgid ""
"As soon as a SIP file is added to one of the source file "
"(:file:`python/core/core.sip`, :file:`python/gui/gui.sip` or "
":file:`python/analysis/analysis.sip`), it will be considered as generated "
"automatically. A test on Travis will ensure that this file is up to date "
"with its corresponding header."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:468
msgid ""
"Older files for which the automatic creation is not enabled yet are listed "
"in :file:`python/auto_sip.blacklist`."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:472
msgid "Improving sipify script"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:474
msgid ""
"If some improvements are required for sipify script, please add the missing "
"bits to the demo file :file:`tests/scripts/sipifyheader.h` and create the "
"expected header :file:`tests/scripts/sipifyheader.expected.si`. This will "
"also be automatically tested on Travis as a unit test of the script itself."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:481
msgid "Coding Style"
msgstr "Stilul de Codificare"

#: ../../docs/developers_guide/codingstandards.rst:484
msgid ""
"Here are described some programming hints and tips that will hopefully "
"reduce errors, development time and maintenance."
msgstr ""
"Aici sunt descrise câteva sugestii și sfaturi de programare care vor reduce,"
" sperăm, erorile, timpul de întreținere și dezvoltare."

#: ../../docs/developers_guide/codingstandards.rst:489
msgid "Where-ever Possible Generalize Code"
msgstr "Generalizați Codul Atunci Când Este Posibil "

#: ../../docs/developers_guide/codingstandards.rst:492
msgid ""
"If you are cut-n-pasting code, or otherwise writing the same thing more than"
" once, consider consolidating the code into a single function."
msgstr ""
"Decât să duplicați un anumit cod, mai bine luați în considerare consolidarea"
" acestuia într-o funcție unică."

#: ../../docs/developers_guide/codingstandards.rst:495
msgid "This will:"
msgstr "Acest lucru vă va permite să:"

#: ../../docs/developers_guide/codingstandards.rst:497
msgid "allow changes to be made in one location instead of in multiple places"
msgstr "efectuați modificări într-o singură locație în loc de mai multe"

#: ../../docs/developers_guide/codingstandards.rst:498
msgid "help prevent code bloat"
msgstr "preveniți încurcarea codului"

#: ../../docs/developers_guide/codingstandards.rst:499
msgid ""
"make it more difficult for multiple copies to evolve differences over time, "
"thus making it harder to understand and maintain for others"
msgstr ""
"împiedica apariția, de-a lungul timpului, a diferențelor între secțiunile "
"identice de cod, făcându-le, astfel, mai greu de înțeles și de întreținut de"
" către alții"

#: ../../docs/developers_guide/codingstandards.rst:504
msgid "Prefer Having Constants First in Predicates"
msgstr "Se preferă poziționarea Constantelor înaintea Predicatelor"

#: ../../docs/developers_guide/codingstandards.rst:506
msgid "Prefer to put constants first in predicates."
msgstr "Se preferă poziționarea constantelor la începutul predicatelor."

#: ../../docs/developers_guide/codingstandards.rst:508
msgid "``0 == value`` instead of ``value == 0``"
msgstr "``0 == value`` în loc de ``value == 0``"

#: ../../docs/developers_guide/codingstandards.rst:510
msgid ""
"This will help prevent programmers from accidentally using ``=`` when they "
"meant to use ``==``, which can introduce very subtle logic bugs. The "
"compiler will generate an error if you accidentally use ``=`` instead of "
"``==`` for comparisons since constants inherently cannot be assigned values."
msgstr ""
"Acest lucru va ajuta prevenirea folosirii accidentale de ``=`` în loc de "
"``==``, care poate introduce erori subtile de logică. Compilatorul va genera"
" o eroare dacă folosiți accidental ``=`` în loc de ``==`` pentru comparații,"
" deoarece nu se pot atribui valori constantelor."

#: ../../docs/developers_guide/codingstandards.rst:516
msgid "Whitespace Can Be Your Friend"
msgstr "Spațiile Albe Vă Pot Fi De Ajutor"

#: ../../docs/developers_guide/codingstandards.rst:518
msgid ""
"Adding spaces between operators, statements, and functions makes it easier "
"for humans to parse code."
msgstr ""
"Adăugarea de spații între operatori, declarații și funcții, facilitează "
"utilizatorilor analiza codului."

#: ../../docs/developers_guide/codingstandards.rst:521
msgid "Which is easier to read, this:"
msgstr "Care cod este mai ușor de citit? Acesta:"

#: ../../docs/developers_guide/codingstandards.rst:527
msgid "or this:"
msgstr "sau acesta:"

#: ../../docs/developers_guide/codingstandards.rst:533
msgid ":file:`scripts/prepare-commit.sh` will take care of this."
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:537
msgid "Put commands on separate lines"
msgstr "Puneți comenzile pe linii separate"

#: ../../docs/developers_guide/codingstandards.rst:539
msgid ""
"When reading code it's easy to miss commands, if they are not at the "
"beginning of the line. When quickly reading through code, it's common to "
"skip lines if they don't look like what you are looking for in the first few"
" characters. It's also common to expect a command after a conditional like "
"``if``."
msgstr ""
"La citirea codului, este ușor să omiteți comenzile dacă acestea nu se află "
"la începutul liniei. La parcurgerea rapidă a codului, este normal să omiteți"
" liniile atunci când acestea nu prezintă ceea ce căutați în primele câteva "
"caractere. Este, de asemenea, normal să vă așteptați la o comandă după un "
"condițional ca ``if``."

#: ../../docs/developers_guide/codingstandards.rst:544
msgid "Consider:"
msgstr "Se ia în considerare următorul cod:"

#: ../../docs/developers_guide/codingstandards.rst:552
msgid "It's very easy to miss part of what the flow of control. Instead use"
msgstr ""
"Este foarte ușor să omiteți o parte din fluxul de control. Scrieți, în "
"schimb"

#: ../../docs/developers_guide/codingstandards.rst:564
msgid "Indent access modifiers"
msgstr "Indentați modificatorii de acces"

#: ../../docs/developers_guide/codingstandards.rst:566
msgid ""
"Access modifiers structure a class into sections of public API, protected "
"API and private API. Access modifiers themselves group the code into this "
"structure. Indent the access modifier and declarations."
msgstr ""
"Modificatorii de acces structurează o clasă în secțiuni de API public, API "
"protejat și API privat. Rolul lor este de a grupa codul pe această "
"structură. Indentați modificatorii de acces și declarațiile."

#: ../../docs/developers_guide/codingstandards.rst:583
msgid "Book recommendations"
msgstr "Cărți recomandate"

#: ../../docs/developers_guide/codingstandards.rst:586
msgid ""
"`Effective Modern C++ <http://shop.oreilly.com/product/0636920033707.do>`_, "
"Scott Meyers"
msgstr ""
"`Effective Modern C++ <http://shop.oreilly.com/product/0636920033707.do>`_, "
"Scott Meyers"

#: ../../docs/developers_guide/codingstandards.rst:587
msgid ""
"`More Effective C++ <https://www.informit.com/store/more-effective-c-plus-"
"plus-35-new-ways-to-improve-your-9780201633719>`_, Scott Meyers"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:588
msgid ""
"`Effective STL <https://www.informit.com/store/effective-stl-50-specific-"
"ways-to-improve-your-use-9780201749625>`_, Scott Meyers"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:589
msgid ""
"`Design Patterns <https://www.amazon.com/Design-Patterns-Elements-Reusable-"
"Object-Oriented/dp/0201633612>`_, GoF"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:591
msgid ""
"You should also really read this article from Qt Quarterly on `designing Qt "
"style (APIs) <https://doc.qt.io/archives/qq/qq13-apis.html>`_"
msgstr ""
"Ar trebui, de asemenea, să citiți acest articol de la Qt Quarterly despre "
"`proiectarea în stilul Qt (API) "
"<https://doc.qt.io/archives/qq/qq13-apis.html>`_"

#: ../../docs/developers_guide/codingstandards.rst:596
msgid "Credits for contributions"
msgstr "Recunoașterea contribuțiilor"

#: ../../docs/developers_guide/codingstandards.rst:598
msgid ""
"Contributors of new functions are encouraged to let people know about their "
"contribution by:"
msgstr ""
"Contribuitorii la noile funcții sunt încurajați să-i informeze pe ceilalți "
"despre contribuția lor prin:"

#: ../../docs/developers_guide/codingstandards.rst:601
msgid ""
"adding a note to the changelog for the first version where the code has been"
" incorporated, of the type::"
msgstr ""
"adăugarea unei note la jurnalul schimbărilor, pentru prima versiune în care "
"a fost încorporat codul, de tipul::"

#: ../../docs/developers_guide/codingstandards.rst:607
msgid ""
"writing an article about the new feature on a blog, and add it to the QGIS "
"planet https://plugins.qgis.org/planet/"
msgstr ""

#: ../../docs/developers_guide/codingstandards.rst:609
msgid "adding their name to:"
msgstr "adăugarea numelui lor la:"

#: ../../docs/developers_guide/codingstandards.rst:611
msgid ":source:`doc/CONTRIBUTORS`"
msgstr ":source:`doc/CONTRIBUTORS`"

#: ../../docs/developers_guide/codingstandards.rst:612
msgid ":source:`doc/AUTHORS`"
msgstr ":source:`doc/AUTHORS`"
