# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-10 11:07+0200\n"
"PO-Revision-Date: 2020-03-16 19:24+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>, 2020\n"
"Language-Team: French (https://www.transifex.com/qgis/teams/6144/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:16
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:29
msgid "Network analysis library"
msgstr "Bibliothèque d'analyse de réseau"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:35
msgid "The network analysis library can be used to:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:37
msgid ""
"create mathematical graph from geographical data (polyline vector layers)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:38
msgid ""
"implement basic methods from graph theory (currently only Dijkstra's "
"algorithm)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:41
msgid ""
"The network analysis library was created by exporting basic functions from "
"the RoadGraph core plugin and now you can use it's methods in plugins or "
"directly from the Python console."
msgstr ""
"La bibliothèque d'analyse de réseau a été créée en exportant les fonctions "
"de l'extension principale RoadGraph. Vous pouvez en utiliser les méthodes "
"dans des extensions ou directement dans la console Python."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:46
msgid "General information"
msgstr "Information générale"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:48
msgid "Briefly, a typical use case can be described as:"
msgstr "Voici un résumé d'un cas d'utilisation typique:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:50
msgid "create graph from geodata (usually polyline vector layer)"
msgstr ""
"créer un graphe depuis les données géographiques (en utilisant une couche "
"vecteur de polylignes)"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:51
msgid "run graph analysis"
msgstr "lancer une analyse de graphe"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:52
msgid "use analysis results (for example, visualize them)"
msgstr "utiliser les résultats d'analyse (pour les visualiser par exemple)"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:55
msgid "Building a graph"
msgstr "Construire un graphe"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:57
msgid ""
"The first thing you need to do --- is to prepare input data, that is to "
"convert a vector layer into a graph. All further actions will use this "
"graph, not the layer."
msgstr ""
"La première chose à faire est de préparer les données d'entrée, c'est à dire"
" de convertir une couche vecteur en graphe. Les actions suivantes "
"utiliseront ce graphe et non la couche."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:61
msgid ""
"As a source we can use any polyline vector layer. Nodes of the polylines "
"become graph vertexes, and segments of the polylines are graph edges. If "
"several nodes have the same coordinates then they are the same graph vertex."
" So two lines that have a common node become connected to each other."
msgstr ""
"Comme source de données, on peut utiliser n'importe quelle couche vecteur de"
" polylignes. Les nœuds des polylignes deviendront les sommets du graphe et "
"les segments des polylignes seront les arcs du graphes. Si plusieurs nœuds "
"ont les mêmes coordonnées alors ils composent le même sommet de graphe. "
"Ainsi, deux lignes qui ont en commun un même nœud sont connectées ensemble."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:66
msgid ""
"Additionally, during graph creation it is possible to \"fix\" (\"tie\") to "
"the input vector layer any number of additional points. For each additional "
"point a match will be found --- the closest graph vertex or closest graph "
"edge. In the latter case the edge will be split and a new vertex added."
msgstr ""
"Pendant la création d'un graphe, il est possible de \"forcer\" (\"lier\") "
"l'ajout d'un ou de plusieurs points additionnels à la couche vecteur "
"d'entrée. Pour chaque point additionnel, un lien sera créé: le sommet du "
"graphe le plus proche ou l'arc de graphe le plus proche. Dans le cas final, "
"l'arc sera séparé en deux et un nouveau sommet sera ajouté."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:71
msgid ""
"Vector layer attributes and length of an edge can be used as the properties "
"of an edge."
msgstr ""
"Les attributs de la couche vecteur et la longueur d'un segment peuvent être "
"utilisés comme propriétés du segment."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:74
msgid ""
"Converting from a vector layer to the graph is done using the `Builder "
"<https://en.wikipedia.org/wiki/Builder_pattern>`_ programming pattern. A "
"graph is constructed using a so-called Director. There is only one Director "
"for now: :api:`QgsVectorLayerDirector <classQgsVectorLayerDirector.html>`. "
"The director sets the basic settings that will be used to construct a graph "
"from a line vector layer, used by the builder to create the graph. "
"Currently, as in the case with the director, only one builder exists: "
":class:`QgsGraphBuilder <qgis.analysis.QgsGraphBuilder>`, that creates "
":class:`QgsGraph <qgis.analysis.QgsGraph>` objects. You may want to "
"implement your own builders that will build a graphs compatible with such "
"libraries as `BGL "
"<https://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ or "
"`NetworkX <https://networkx.lanl.gov/>`_."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:86
msgid ""
"To calculate edge properties the programming pattern `strategy "
"<https://en.wikipedia.org/wiki/Strategy_pattern>`_ is used. For now only "
":api:`QgsNetworkDistanceStrategy <classQgsNetworkDistanceStrategy.html>` "
"strategy (that takes into account the length of the route) and "
":api:`QgsNetworkSpeedStrategy <classQgsNetworkSpeedStrategy.html>` (that "
"also considers the speed) are availabile. You can implement your own "
"strategy that will use all necessary parameters. For example, RoadGraph "
"plugin uses a strategy that computes travel time using edge length and speed"
" value from attributes."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:95
msgid "It's time to dive into the process."
msgstr "Il est temps de plonger dans le processus."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:97
msgid "First of all, to use this library we should import the analysis module"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:103
msgid "Then some examples for creating a director"
msgstr "Ensuite, quelques exemples pour créer un directeur"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:119
msgid ""
"To construct a director  we should pass a vector layer, that will be used as"
" the source for the graph structure and information about allowed movement "
"on each road segment (one-way or bidirectional movement, direct or reverse "
"direction). The call looks like this"
msgstr ""
"Pour construire un directeur, il faut lui fournir une couche vecteur qui "
"sera utilisée comme source pour la structure du graphe ainsi que des "
"informations sur les mouvements permis sur chaque segment de route (sens "
"unique ou déplacement bidirectionnel, direct ou inversé). L'appel au "
"directeur se fait de la manière suivante"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:133
msgid "And here is full list of what these parameters mean:"
msgstr "Voici la liste complète de la signification de ces paramètres:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:135
msgid "``vectorLayer`` --- vector layer used to build the graph"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:136
msgid ""
"``directionFieldId`` --- index of the attribute table field, where "
"information about roads direction is stored. If ``-1``, then don't use this "
"info at all. An integer."
msgstr ""
"``directionFieldId`` --- index du champ de la table d'attribut où est "
"stockée l'information sur la direction de la route. Si ``-1`` est utilisé, "
"cette information n'est pas utilisée. Un entier."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:139
msgid ""
"``directDirectionValue`` --- field value for roads with direct direction "
"(moving from first line point to last one). A string."
msgstr ""
"``directDirectionValue`` --- valeur du champ utilisé pour les routes avec "
"une direction directe (déplacement du premier point de la ligne au dernier)."
" Une chaîne de caractères."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:141
msgid ""
"``reverseDirectionValue`` --- field value for roads with reverse direction "
"(moving from last line point to first one). A string."
msgstr ""
"``reverseDirectionValue`` --- valeur du champ utilisé pour les routes avec "
"une direction inverse (déplacement du dernier point de la ligne au premier)."
" Une chaîne de caractères."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:143
msgid ""
"``bothDirectionValue`` --- field value for bidirectional roads (for such "
"roads we can move from first point to last and from last to first). A "
"string."
msgstr ""
"``bothDirectionValue`` --- valeur du champ utilisé pour les routes "
"bidirectionelles (pour ces routes, on peut se déplacer du premier point au "
"dernier et du dernier au premier). Une chaîne de caractères."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:145
msgid ""
"``defaultDirection`` --- default road direction. This value will be used for"
" those roads where field ``directionFieldId`` is not set or has some value "
"different from any of the three values specified above. Possible values are:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:149
msgid "``QgsVectorLayerDirector.DirectionForward`` --- One-way direct"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:150
msgid "``QgsVectorLayerDirector.DirectionBackward`` --- One-way reverse"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:151
msgid "``QgsVectorLayerDirector.DirectionBoth`` --- Two-way"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:154
msgid ""
"It is necessary then to create a strategy for calculating edge properties"
msgstr ""
"Il est ensuite impératif de créer une stratégie de calcul des propriétés des"
" arcs:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:166
msgid "And tell the director about this strategy"
msgstr "Et d'informer le directeur à propos de cette stratégie:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:173
msgid ""
"Now we can use the builder, which will create the graph. The "
":class:`QgsGraphBuilder <qgis.analysis.QgsGraphBuilder>` class constructor "
"takes several arguments:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:176
msgid "``crs`` --- coordinate reference system to use. Mandatory argument."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:177
msgid ""
"``otfEnabled`` --- use \"on the fly\" reprojection or no. By default "
"const:`True` (use OTF)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:179
msgid "``topologyTolerance`` --- topological tolerance. Default value is 0."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:180
msgid "``ellipsoidID`` --- ellipsoid to use. By default \"WGS84\"."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:187
msgid ""
"Also we can define several points, which will be used in the analysis. For "
"example"
msgstr ""
"Nous pouvons également définir plusieurs points qui seront utilisés dans "
"l'analyse, par exemple:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:195
msgid ""
"Now all is in place so we can build the graph and \"tie\" these points to it"
msgstr ""
"Maintenant que tout est en place, nous pouvons construire le graphe et lier "
"ces points dessus:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:201
msgid ""
"Building the graph can take some time (which depends on the number of "
"features in a layer and layer size). ``tiedPoints`` is a list with "
"coordinates of \"tied\" points. When the build operation is finished we can "
"get the graph and use it for the analysis"
msgstr ""
"La construction du graphe peut prendre du temps (qui dépend du nombre "
"d'entités dans la couche et de la taille de la couche). ``tiedPoints`` est "
"une liste qui contient les coordonnées des points liés. Lorsque l'opération "
"de construction est terminée, nous pouvons récupérer le graphe et l'utiliser"
" pour l'analyse:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:210
msgid "With the next code we can get the vertex indexes of our points"
msgstr ""
"Avec le code qui suit, nous pouvons récupérer les index des arcs de nos "
"points:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:219
msgid "Graph analysis"
msgstr "Analyse de graphe"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:221
msgid ""
"Networks analysis is used to find answers to two questions: which vertexes "
"are connected and how to find a shortest path. To solve these problems the "
"network analysis library provides Dijkstra's algorithm."
msgstr ""
"L'analyse de graphe est utilisée pour trouver des réponses aux deux "
"questions: quels arcs sont connectés et comment trouver le plus court chemin"
" ? Pour résoudre ces problèmes la bibliothèque d'analyse de graphe fournit "
"l'algorithme de Dijkstra."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:225
msgid ""
"Dijkstra's algorithm finds the shortest route from one of the vertexes of "
"the graph to all the others and the values of the optimization parameters. "
"The results can be represented as a shortest path tree."
msgstr ""
"L'algorithme de Dijkstra trouve le plus court chemin entre un des arcs du "
"graphe par rapport à tous les autres en tenant compte des paramètres "
"d'optimisation. Ces résultats peuvent être représentés comme un arbre du "
"chemin le plus court."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:229
msgid ""
"The shortest path tree is a directed weighted graph (or more precisely a "
"tree) with the following properties:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:232
msgid "only one vertex has no incoming edges — the root of the tree"
msgstr "Seul un arc n'a pas d'arcs entrants: la racine de l'arbre."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:233
msgid "all other vertexes have only one incoming edge"
msgstr "Tous les autres arcs n'ont qu'un seul arc entrant."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:234
msgid ""
"if vertex B is reachable from vertex A, then the path from A to B is the "
"single available path and it is optimal (shortest) on this graph"
msgstr ""
"Si un arc B est atteignable depuis l'arc A alors le chemin de A vers B est "
"le seul chemin disponible et il est le chemin optimal (le plus court) sur ce"
" graphe."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:237
msgid ""
"To get the shortest path tree use the methods :meth:`shortestTree "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` and :meth:`dijkstra "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` of the :class:`QgsGraphAnalyzer "
"<qgis.analysis.QgsGraphAnalyzer>` class. It is recommended to use the "
":meth:`dijkstra <qgis.analysis.QgsGraphAnalyzer.dijkstra>` method because it"
" works faster and uses memory more efficiently."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:244
msgid ""
"The :meth:`shortestTree <qgis.analysis.QgsGraphAnalyzer.shortestTree>` "
"method is useful when you want to walk around the shortest path tree. It "
"always creates a new graph object (QgsGraph) and accepts three variables:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:249
msgid "``source`` --- input graph"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:250
msgid ""
"``startVertexIdx`` --- index of the point on the tree (the root of the tree)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:251
msgid "``criterionNum`` --- number of edge property to use (started from 0)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:257
msgid ""
"The :meth:`dijkstra <qgis.analysis.QgsGraphAnalyzer.dijkstra>` method has "
"the same arguments, but returns two arrays. In the first array element `n` "
"contains index of the incoming edge or -1 if there are no incoming edges. In"
" the second array element `n` contains the distance from the root of the "
"tree to vertex `n` or DOUBLE_MAX if vertex `n` is unreachable from the root."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:268
msgid ""
"Here is some very simple code to display the shortest path tree using the "
"graph created with the :meth:`shortestTree "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` method (select linestring "
"layer in :guilabel:`Layers` panel and replace coordinates with your own)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:273
msgid ""
"Use this code only as an example, it creates a lot of :class:`QgsRubberBand "
"<qgis.gui.QgsRubberBand>` objects and may be slow on large datasets."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:309
msgid ""
"Same thing but using the :meth:`dijkstra "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:346
msgid "Finding shortest paths"
msgstr "Trouver les chemins les plus courts"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:348
msgid ""
"To find the optimal path between two points the following approach is used. "
"Both points (start A and end B) are \"tied\" to the graph when it is built. "
"Then using the :meth:`shortestTree "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` or :meth:`dijkstra "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method we build the shortest path"
" tree with root in the start point A. In the same tree we also find the end "
"point B and start to walk through the tree from point B to point A. The "
"whole algorithm can be written as:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:366
msgid ""
"At this point we have the path, in the form of the inverted list of vertexes"
" (vertexes are listed in reversed order from end point to start point) that "
"will be visited during traveling by this path."
msgstr ""
"A ce niveau, nous avons le chemin, sous la forme d'une liste inversée d'arcs"
" (les arcs sont listés dans un ordre inversé, depuis le point de la fin vers"
" le point de démarrage) qui seront traversés lors de l'évolution sur le "
"chemin."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:370
msgid ""
"Here is the sample code for QGIS Python Console (you may need to load and "
"select a linestring layer in TOC and replace coordinates in the code with "
"yours) that uses the :meth:`shortestTree "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` method"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:426
msgid ""
"And here is the same sample but using the :meth:`dijkstra "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:482
msgid "Areas of availability"
msgstr "Surfaces de disponibilité"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:484
msgid ""
"The area of availability for vertex A is the subset of graph vertexes that "
"are accessible from vertex A and the cost of the paths from A to these "
"vertexes are not greater that some value."
msgstr ""
"La surface de disponibilité d'un arc A est le sous-ensemble des arcs du "
"graphe qui sont accessibles à partir de l'arc A et où le coût des chemins à "
"partir de A vers ces arcs ne dépasse pas une certaine valeur."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:488
msgid ""
"More clearly this can be shown with the following example: \"There is a fire"
" station. Which parts of city can a fire truck reach in 5 minutes? 10 "
"minutes? 15 minutes?\". Answers to these questions are fire station's areas "
"of availability."
msgstr ""
"Plus clairement, cela peut être illustré par l'exemple suivant: \"Il y a une"
" caserne de pompiers. Quelles parties de la ville peuvent être atteintes par"
" un camion de pompier en 5 minutes ? 10 minutes ? 15 minutes ?\" La réponse "
"à ces questions correspond aux surface de disponibilité de la caserne de "
"pompiers."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:493
msgid ""
"To find the areas of availability we can use the :meth:`dijkstra "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method of the "
":class:`QgsGraphAnalyzer <qgis.analysis.QgsGraphAnalyzer>` class. It is "
"enough to compare the elements of the cost array with a predefined value. If"
" cost[i] is less than or equal to a predefined value, then vertex i is "
"inside the area of availability, otherwise it is outside."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:500
msgid ""
"A more difficult problem is to get the borders of the area of availability. "
"The bottom border is the set of vertexes that are still accessible, and the "
"top border is the set of vertexes that are not accessible. In fact this is "
"simple: it is the availability border based on the edges of the shortest "
"path tree for which the source vertex of the edge is accessible and the "
"target vertex of the edge is not."
msgstr ""
"Un problème plus difficile à régler est d'obtenir les frontières de la "
"surface de disponibilité. La frontière inférieure est constituée par "
"l'ensemble des arcs qui sont toujours accessibles et la frontière supérieure"
" est composée des arcs qui ne sont pas accessibles. En fait, c'est très "
"simple: c'est la limite de disponibilité des arcs de l'arbre du plus court "
"chemin pour lesquels l'arc source de l'arc est accessible et l'arc cible ne "
"l'est pas."

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:507
msgid "Here is an example"
msgstr "Voici un exemple:"
