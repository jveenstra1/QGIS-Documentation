# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-10 11:07+0200\n"
"PO-Revision-Date: 2020-03-16 19:24+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>, 2020\n"
"Language-Team: Korean (https://www.transifex.com/qgis/teams/6144/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:11
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:42
msgid "Using the Map Canvas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:48
msgid ""
"The Map canvas widget is probably the most important widget within QGIS "
"because it shows the map composed from overlaid map layers and allows "
"interaction with the map and layers. The canvas always shows a part of the "
"map defined by the current canvas extent. The interaction is done through "
"the use of **map tools**: there are tools for panning, zooming, identifying "
"layers, measuring, vector editing and others. Similar to other graphics "
"programs, there is always one tool active and the user can switch between "
"the available tools."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:56
msgid ""
"The map canvas is implemented with the :class:`QgsMapCanvas "
"<qgis.gui.QgsMapCanvas>` class in the :mod:`qgis.gui` module. The "
"implementation is based on the Qt Graphics View framework. This framework "
"generally provides a surface and a view where custom graphics items are "
"placed and user can interact with them.  We will assume that you are "
"familiar enough with Qt to understand the concepts of the graphics scene, "
"view and items. If not, please read the `overview of the framework "
"<https://doc.qt.io/qt-5/graphicsview.html>`_."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:64
msgid ""
"Whenever the map has been panned, zoomed in/out (or some other action that "
"triggers a refresh), the map is rendered again within the current extent. "
"The layers are rendered to an image (using the :class:`QgsMapRendererJob "
"<qgis.core.QgsMapRendererJob>` class) and that image is displayed on the "
"canvas. The :class:`QgsMapCanvas <qgis.gui.QgsMapCanvas>` class also "
"controls refreshing of the rendered map. Besides this item which acts as a "
"background, there may be more **map canvas items**."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:70
msgid ""
"Typical map canvas items are rubber bands (used for measuring, vector "
"editing etc.) or vertex markers. The canvas items are usually used to give "
"visual feedback for map tools, for example, when creating a new polygon, the"
" map tool creates a rubber band canvas item that shows the current shape of "
"the polygon. All map canvas items are subclasses of :class:`QgsMapCanvasItem"
" <qgis.gui.QgsMapCanvasItem>`  which adds some more functionality to the "
"basic ``QGraphicsItem`` objects."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:79
msgid "To summarize, the map canvas architecture consists of three concepts:"
msgstr "요약하면 맵 캔버스 아키텍처는 다음 3가지 개념으로 이루어집니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:81
msgid "map canvas --- for viewing of the map"
msgstr "맵 캔버스 --- 맵을 보여주는 데 쓰입니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:82
msgid ""
"map canvas items --- additional items that can be displayed on the map "
"canvas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:83
msgid "map tools --- for interaction with the map canvas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:88
msgid "Embedding Map Canvas"
msgstr "맵 캔버스 내장시키기"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:90
msgid ""
"Map canvas is a widget like any other Qt widget, so using it is as simple as"
" creating and showing it."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:98
msgid ""
"This produces a standalone window with map canvas. It can be also embedded "
"into an existing widget or window. When using :file:`.ui` files and Qt "
"Designer, place a ``QWidget`` on the form and promote it to a new class: set"
" ``QgsMapCanvas`` as class name and set ``qgis.gui`` as header file. The "
"``pyuic5`` utility will take care of it. This is a very convenient way of "
"embedding the canvas. The other possibility is to manually write the code to"
" construct map canvas and other widgets (as children of a main window or "
"dialog) and create a layout."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:106
msgid ""
"By default, map canvas has black background and does not use anti-aliasing. "
"To set white background and enable anti-aliasing for smooth rendering"
msgstr ""
"맵 캔버스의 초기값은 배경은 검은색, 안티알리아싱은 사용하지 않는 것입니다. 배경을 하얀색으로 설정하고 부드러운 렌더링을 위해 "
"안티알리아싱을 활성화하려면 다음과 같이 하십시오."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:114
msgid ""
"(In case you are wondering, ``Qt`` comes from ``PyQt.QtCore`` module and "
"``Qt.white`` is one of the predefined ``QColor`` instances.)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:117
msgid ""
"Now it is time to add some map layers. We will first open a layer and add it"
" to the current project. Then we will set the canvas extent and set the list"
" of layers for the canvas."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:137
msgid ""
"After executing these commands, the canvas should show the layer you have "
"loaded."
msgstr "이 명령어들을 실행하면, 사용자가 불러온 레이어가 캔버스에 보일 것입니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:143
msgid "Rubber Bands and Vertex Markers"
msgstr "고무줄과 버텍스 마커"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:145
msgid ""
"To show some additional data on top of the map in canvas, use map canvas "
"items. It is possible to create custom canvas item classes (covered below), "
"however there are two useful canvas item classes for convenience: "
":class:`QgsRubberBand <qgis.gui.QgsRubberBand>` for drawing polylines or "
"polygons, and :class:`QgsVertexMarker <qgis.gui.QgsVertexMarker>` for "
"drawing points. They both work with map coordinates, so the shape is "
"moved/scaled automatically when the canvas is being panned or zoomed."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:153
msgid "To show a polyline:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:161
msgid "To show a polygon"
msgstr "폴리곤을 표시하는 방법은 다음과 같습니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:169
msgid ""
"Note that points for polygon is not a plain list: in fact, it is a list of "
"rings containing linear rings of the polygon: first ring is the outer "
"border, further (optional) rings correspond to holes in the polygon."
msgstr ""
"폴리곤의 포인트들이 1차원 리스트가 아니라는 점에 주의하십시오. 실제로, 폴리곤의 포인트들은 폴리곤의 선형 폐곡선을 담고 있는 폐곡선 "
"리스트입니다. 첫 번째 폐곡선은 외곽 경계선이고, 그 다음의 (있을 수도 있고 없을 수도 있는) 폐곡선은 폴리곤 내부의 구멍에 "
"해당합니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:173
msgid ""
"Rubber bands allow some customization, namely to change their color and line"
" width"
msgstr "고무줄을 사용자 지정 할 수 있습니다. 즉 색상 및 선 두께를 변경할 수도 있습니다. "

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:181
msgid ""
"The canvas items are bound to the canvas scene. To temporarily hide them "
"(and show them again), use the :func:`hide` and :func:`show` combo. To "
"completely remove the item, you have to remove it from the scene of the "
"canvas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:189
msgid ""
"(in C++ it's possible to just delete the item, however in Python ``del r`` "
"would just delete the reference and the object will still exist as it is "
"owned by the canvas)"
msgstr ""
"(C++의 경우 아이템을 그냥 삭제하는 것도 가능하지만, 파이썬에서 ``del r`` 명령어는 참조만 삭제할 뿐 실제 오브젝트는 캔버스가"
" 소유하고 있으므로 계속 남아 있을 것입니다.)"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:193
msgid ""
"Rubber band can be also used for drawing points, but the "
":class:`QgsVertexMarker <qgis.gui.QgsVertexMarker>` class is better suited "
"for this (:class:`QgsRubberBand <qgis.gui.QgsRubberBand>` would only draw a "
"rectangle around the desired point)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:197
msgid "You can use the vertex marker like this:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:204
msgid ""
"This will draw a red cross on position **[10,45]**. It is possible to "
"customize the icon type, size, color and pen width"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:214
msgid ""
"For temporary hiding of vertex markers and removing them from canvas, use "
"the same methods as for rubber bands."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:220
msgid "Using Map Tools with Canvas"
msgstr "캔버스에서 맵 도구 사용하기"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:222
msgid ""
"The following example constructs a window that contains a map canvas and "
"basic map tools for map panning and zooming. Actions are created for "
"activation of each tool: panning is done with :class:`QgsMapToolPan "
"<qgis.gui.QgsMapToolPan>`, zooming in/out with a pair of "
":class:`QgsMapToolZoom <qgis.gui.QgsMapToolZoom>` instances. The actions are"
" set as checkable and later assigned to the tools to allow automatic "
"handling of checked/unchecked state of the actions -- when a map tool gets "
"activated, its action is marked as selected and the action of the previous "
"map tool is deselected. The map tools are activated using "
":meth:`setMapTool() <qgis.gui.QgsMapCanvas.setMapTool>` method."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:286
msgid ""
"You can try the above code in the Python console editor. To invoke the "
"canvas window, add the following lines to instantiate the ``MyWnd`` class. "
"They will render the currently selected layer on the newly created canvas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:298
msgid "Writing Custom Map Tools"
msgstr "사용자 지정 맵 도구 작성"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:300
msgid ""
"You can write your custom tools, to implement a custom behavior to actions "
"performed by users on the canvas."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:303
msgid ""
"Map tools should inherit from the :class:`QgsMapTool <qgis.gui.QgsMapTool>`,"
" class or any derived class, and selected as active tools in the canvas "
"using the :meth:`setMapTool() <qgis.gui.QgsMapCanvas.setMapTool>` method as "
"we have already seen."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:308
msgid ""
"Here is an example of a map tool that allows to define a rectangular extent "
"by clicking and dragging on the canvas. When the rectangle is defined, it "
"prints its boundary coordinates in the console. It uses the rubber band "
"elements described before to show the selected rectangle as it is being "
"defined."
msgstr ""
"다음 예시 코드는 캔버스 상에서 클릭과 드래그로 사각형 범위를 정의하도록 해주는 맵 도구입니다. 사각형이 정의되면, 콘솔에 그 범위 "
"좌표를 출력합니다. 이전에 설명했던 고무줄 기능을 사용해서 확정되기 전의 사각형을 표시할 것입니다."

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:382
msgid "Writing Custom Map Canvas Items"
msgstr "사용자 지정 맵 캔버스 아이템 작성"

#: ../../docs/pyqgis_developer_cookbook/canvas.rst:384
msgid "Here is an example of a custom canvas item that draws a circle:"
msgstr ""
