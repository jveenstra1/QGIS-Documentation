# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-10 11:07+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:9
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:34
msgid "Expressions, Filtering and Calculating Values"
msgstr "Expressions, Filtering and Calculating Values"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:39
msgid ""
"QGIS has some support for parsing of SQL-like expressions. Only a small "
"subset of SQL syntax is supported. The expressions can be evaluated either "
"as boolean predicates (returning True or False) or as functions (returning a"
" scalar value). See :ref:`vector_expressions` in the User Manual for a "
"complete list of available functions."
msgstr ""
"QGIS has some support for parsing of SQL-like expressions. Only a small "
"subset of SQL syntax is supported. The expressions can be evaluated either "
"as boolean predicates (returning True or False) or as functions (returning a"
" scalar value). See :ref:`vector_expressions` in the User Manual for a "
"complete list of available functions."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:45
msgid "Three basic types are supported:"
msgstr "Three basic types are supported:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:47
msgid ""
"number --- both whole numbers and decimal numbers, e.g. ``123``, ``3.14``"
msgstr ""
"number --- both whole numbers and decimal numbers, e.g. ``123``, ``3.14``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:48
msgid ""
"string --- they have to be enclosed in single quotes: ``'hello world'``"
msgstr ""
"string --- they have to be enclosed in single quotes: ``'hello world'``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:49
msgid ""
"column reference --- when evaluating, the reference is substituted with the "
"actual value of the field. The names are not escaped."
msgstr ""
"column reference --- when evaluating, the reference is substituted with the "
"actual value of the field. The names are not escaped."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:52
msgid "The following operations are available:"
msgstr "The following operations are available:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:54
msgid "arithmetic operators: ``+``, ``-``, ``*``, ``/``, ``^``"
msgstr "arithmetic operators: ``+``, ``-``, ``*``, ``/``, ``^``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:55
msgid "parentheses: for enforcing the operator precedence: ``(1 + 1) * 3``"
msgstr "parentheses: for enforcing the operator precedence: ``(1 + 1) * 3``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:56
msgid "unary plus and minus: ``-12``, ``+5``"
msgstr "unary plus and minus: ``-12``, ``+5``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:57
msgid ""
"mathematical functions: ``sqrt``, ``sin``, ``cos``, ``tan``, ``asin``, "
"``acos``, ``atan``"
msgstr ""
"mathematical functions: ``sqrt``, ``sin``, ``cos``, ``tan``, ``asin``, "
"``acos``, ``atan``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:59
msgid ""
"conversion functions: ``to_int``, ``to_real``, ``to_string``, ``to_date``"
msgstr ""
"conversion functions: ``to_int``, ``to_real``, ``to_string``, ``to_date``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:60
msgid "geometry functions: ``$area``, ``$length``"
msgstr "geometry functions: ``$area``, ``$length``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:61
msgid ""
"geometry handling functions: ``$x``, ``$y``, ``$geometry``, "
"``num_geometries``, ``centroid``"
msgstr ""
"geometry handling functions: ``$x``, ``$y``, ``$geometry``, "
"``num_geometries``, ``centroid``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:63
msgid "And the following predicates are supported:"
msgstr "And the following predicates are supported:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:65
msgid "comparison: ``=``, ``!=``, ``>``, ``>=``, ``<``, ``<=``"
msgstr "comparison: ``=``, ``!=``, ``>``, ``>=``, ``<``, ``<=``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:66
msgid ""
"pattern matching: ``LIKE`` (using % and _), ``~`` (regular expressions)"
msgstr ""
"pattern matching: ``LIKE`` (using % and _), ``~`` (regular expressions)"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:67
msgid "logical predicates: ``AND``, ``OR``, ``NOT``"
msgstr "logical predicates: ``AND``, ``OR``, ``NOT``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:68
msgid "NULL value checking: ``IS NULL``, ``IS NOT NULL``"
msgstr "NULL value checking: ``IS NULL``, ``IS NOT NULL``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:70
msgid "Examples of predicates:"
msgstr "Examples of predicates:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:72
msgid "``1 + 2 = 3``"
msgstr "``1 + 2 = 3``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:73
msgid "``sin(angle) > 0``"
msgstr "``sin(angle) > 0``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:74
msgid "``'Hello' LIKE 'He%'``"
msgstr "``'Hello' LIKE 'He%'``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:75
msgid "``(x > 10 AND y > 10) OR z = 0``"
msgstr "``(x > 10 AND y > 10) OR z = 0``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:77
msgid "Examples of scalar expressions:"
msgstr "Examples of scalar expressions:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:79
msgid "``2 ^ 10``"
msgstr "``2 ^ 10``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:80
msgid "``sqrt(val)``"
msgstr "``sqrt(val)``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:81
msgid "``$length + 1``"
msgstr "``$length + 1``"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:86
msgid "Parsing Expressions"
msgstr "Parsing Expressions"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:88
msgid ""
"The following example shows how to check if a given expression can be parsed"
" correctly:"
msgstr ""
"The following example shows how to check if a given expression can be parsed"
" correctly:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:103
msgid "Evaluating Expressions"
msgstr "Evaluating Expressions"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:105
msgid ""
"Expressions can be used in different contexts, for example to filter "
"features or to compute new field values. In any case, the expression has to "
"be evaluated. That means that its value is computed by performing the "
"specified computational steps, which can range from simple arithmetic to "
"aggregate expressions."
msgstr ""
"Expressions can be used in different contexts, for example to filter "
"features or to compute new field values. In any case, the expression has to "
"be evaluated. That means that its value is computed by performing the "
"specified computational steps, which can range from simple arithmetic to "
"aggregate expressions."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:112
msgid "Basic Expressions"
msgstr "Basic Expressions"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:114
msgid "This basic expression evaluates to 1, meaning it is true:"
msgstr "This basic expression evaluates to 1, meaning it is true:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:123
msgid "Expressions with features"
msgstr "Expressions with features"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:125
msgid ""
"To evaluate an expression against a feature, a :class:`QgsExpressionContext "
"<qgis.core.QgsExpressionContext>` object has to be created and passed to the"
" evaluate function in order to allow the expression to access the feature's "
"field values."
msgstr ""
"To evaluate an expression against a feature, a :class:`QgsExpressionContext "
"<qgis.core.QgsExpressionContext>` object has to be created and passed to the"
" evaluate function in order to allow the expression to access the feature's "
"field values."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:129
msgid ""
"The following example shows how to create a feature with a field called "
"\"Column\" and how to add this feature to the expression context."
msgstr ""
"The following example shows how to create a feature with a field called "
"\"Column\" and how to add this feature to the expression context."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:147
msgid ""
"The following is a more complete example of how to use expressions in the "
"context of a vector layer, in order to compute new field values:"
msgstr ""
"The following is a more complete example of how to use expressions in the "
"context of a vector layer, in order to compute new field values:"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:214
msgid "Filtering a layer with expressions"
msgstr "Filtering a layer with expressions"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:216
msgid ""
"The following example can be used to filter a layer and return any feature "
"that matches a predicate."
msgstr ""
"The following example can be used to filter a layer and return any feature "
"that matches a predicate."

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:243
msgid "Handling expression errors"
msgstr "Handling expression errors"

#: ../../docs/pyqgis_developer_cookbook/expressions.rst:245
msgid ""
"Expression-related errors can occur during expression parsing or evaluation:"
msgstr ""
"Expression-related errors can occur during expression parsing or evaluation:"
