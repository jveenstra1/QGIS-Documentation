# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-10 11:07+0200\n"
"PO-Revision-Date: 2020-03-16 19:18+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>, 2020\n"
"Language-Team: Dutch (https://www.transifex.com/qgis/teams/6144/nl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/training_manual/database_concepts/db_intro.rst:2
msgid "|LS| Introduction to Databases"
msgstr "|LS| Introductie voor databases"

#: ../../docs/training_manual/database_concepts/db_intro.rst:4
msgid ""
"Before using PostgreSQL, let's make sure of our ground by covering general "
"database theory. You will not need to enter any of the example code; it's "
"only there for illustration purposes."
msgstr ""
"Laten we, voordat we PostgreSQL gebruiken, onze basis vaststellen door "
"algemene theorie over databases te behandelen. U hoeft geen voorbeeldcode in"
" te voeren; het is er alleen ter illustratie."

#: ../../docs/training_manual/database_concepts/db_intro.rst:8
msgid ""
"**The goal for this lesson:** To understand fundamental database concepts."
msgstr ""
"**Het doel voor deze les:** Fundamentele concepten voor databases begrijpen."

#: ../../docs/training_manual/database_concepts/db_intro.rst:11
msgid "What is a Database?"
msgstr "Wat is een database?"

#: ../../docs/training_manual/database_concepts/db_intro.rst:13
msgid ""
"A database consists of an organized collection of data for one or more uses,"
" typically in digital form. *- Wikipedia*"
msgstr ""
"Een database bestaat uit een georganiseerde verzameling gegevens voor één of"
" meer doeleinden, gewoonlijk in digitale vorm. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:18
msgid ""
"A database management system (DBMS) consists of software that operates "
"databases, providing storage, access, security, backup and other facilities."
" *- Wikipedia*"
msgstr ""
"Een database management system (DBMS) bestaat uit software die werkt op "
"databases, opslag, toegang, beveiliging, back-up en andere faciliteiten "
"verschaft. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:23
msgid "Tables"
msgstr "Tabellen"

#: ../../docs/training_manual/database_concepts/db_intro.rst:25
msgid ""
"In relational databases and flat file databases, a table is a set of data "
"elements (values) that is organized using a model of vertical columns (which"
" are identified by their name) and horizontal rows. A table has a specified "
"number of columns, but can have any number of rows. Each row is identified "
"by the values appearing in a particular column subset which has been "
"identified as a candidate key. *- Wikipedia*"
msgstr ""
"In relationele databases en platte databases, is een tabel een verzameling "
"gegevenselementen (waarden) die is georganiseerd met behulp van een model "
"van verticale kolommen (die worden geïdentificeerd door hun naam) en "
"horizontale rijen. Een tabel heeft een gespecificeerd aantal kolommen, maar "
"kunnen elk willekeurig aantal rijen hebben. Elke rij wordt geïdentificeerd "
"door de waarden die verschijnen in een bepaalde subset van kolommen die "
"wordt geïdentificeerd als een kandidaat-sleutel. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:40
msgid "In SQL databases a table is also known as a **relation.**"
msgstr "In databases van SQL staat een tabel ook bekend als een **relatie.**"

#: ../../docs/training_manual/database_concepts/db_intro.rst:43
msgid "Columns / Fields"
msgstr "Kolommen / Velden"

#: ../../docs/training_manual/database_concepts/db_intro.rst:45
msgid ""
"A column is a set of data values of a particular simple type, one for each "
"row of the table. The columns provide the structure according to which the "
"rows are composed. The term field is often used interchangeably with column,"
" although many consider it more correct to use field (or field value) to "
"refer specifically to the single item that exists at the intersection "
"between one row and one column. *- Wikipedia*"
msgstr ""
"Een kolom is een verzameling gegevenswaarden van een bepaald eenvoudig type,"
" één voor elke rij van de tabel. De kolommen verschaffen de structuur  "
"waarin de rijen overeenkomstig worden samengesteld. De term veld wordt vaak "
"uitwisselbaar gebruik met kolom, hoewel velen het meer correct vinden om "
"veld (of veldwaarde) te gebruiken om specifiek te verwijzen naar het enkele "
"item dat bestaat op de kruising van één rij en één kolom. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:52
msgid "A column:"
msgstr "Een kolom:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:61
msgid "A field:"
msgstr "Een veld:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:68
msgid "Records"
msgstr "Records"

#: ../../docs/training_manual/database_concepts/db_intro.rst:70
msgid ""
"A record is the information stored in a table row. Each record will have a "
"field for each of the columns in the table."
msgstr ""
"Een record is de informatie die is opgeslagen in een rij van een tabel. Elk "
"record zal een veld hebben voor elk van de kolommen in de tabel."

#: ../../docs/training_manual/database_concepts/db_intro.rst:78
msgid "Datatypes"
msgstr "Datatypen"

#: ../../docs/training_manual/database_concepts/db_intro.rst:80
msgid ""
"Datatypes restrict the kind of information that can be stored in a column. "
"*- Tim and Horst*"
msgstr ""
"Datatypen beperken het soort informatie dat kan worden opgeslagen in een "
"kolom. *- Tim en Horst*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:83
msgid "There are many kinds of datatypes. Let's focus on the most common:"
msgstr ""
"er bestaan vele soorten datatypen. Laten we focussen op de meest "
"voorkomende:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:85
msgid "``String`` - to store free-form text data"
msgstr "``String`` - om tekstgegevens in de vorm van vrije tekst op te slaan"

#: ../../docs/training_manual/database_concepts/db_intro.rst:86
msgid "``Integer`` - to store whole numbers"
msgstr "``Integer`` - om gehele getallen op te slaan"

#: ../../docs/training_manual/database_concepts/db_intro.rst:87
msgid "``Real`` - to store decimal numbers"
msgstr "``Real`` - om decimale getallen op te slaan"

#: ../../docs/training_manual/database_concepts/db_intro.rst:88
msgid "``Date`` - to store Horst's birthday so no one forgets"
msgstr ""
"``Date`` - om de verjaardag van Horst op te slaan zodat niemand die vergeet"

#: ../../docs/training_manual/database_concepts/db_intro.rst:89
msgid "``Boolean`` - to store simple true/false values"
msgstr "``Boolean`` - om eenvoudige waarden ja/nee op te slaan"

#: ../../docs/training_manual/database_concepts/db_intro.rst:91
msgid ""
"You can tell the database to allow you to also store nothing in a field. If "
"there is nothing in a field, then the field content is referred to as a "
"**'null' value**:"
msgstr ""
"U kunt de database vertellen om u ook toe te staan niets in een veld op te "
"slaan. Als er niets in een veld staat, dan wordt naar de veldinhoud verwezen"
" als een **'null'-waarde**:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:101
msgid "Result:"
msgstr "Resultaat:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:112
msgid ""
"There are many more datatypes you can use - `check the PostgreSQL manual! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"
msgstr ""
"Er zijn nog veel meer datatypen die u kunt gebruiken - `bekijk de "
"handleiding van PostgreSQL! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"

#: ../../docs/training_manual/database_concepts/db_intro.rst:116
msgid "Modelling an Address Database"
msgstr "Een adresdatabase modelleren"

#: ../../docs/training_manual/database_concepts/db_intro.rst:118
msgid ""
"Let's use a simple case study to see how a database is constructed. We want "
"to create an address database."
msgstr ""
"Laten we een eenvoudig geval bekijken om te zien hoe een database is "
"opgebouwd. We willen een adresdatabase maken."

#: ../../docs/training_manual/database_concepts/db_intro.rst:122
#: ../../docs/training_manual/database_concepts/db_intro.rst:189
msgid "|TY| |basic|"
msgstr "|TY| |basic|"

#: ../../docs/training_manual/database_concepts/db_intro.rst:124
msgid ""
"Write down the properties which make up a simple address and which we would "
"want to store in our database."
msgstr ""
"Schrijf de eigenschappen op waaruit een eenvoudig adres bestaat en die we "
"zouden willen opslaan in onze database."

#: ../../docs/training_manual/database_concepts/db_intro.rst:127
msgid ":ref:`Check your results <database-concepts-1>`"
msgstr ":ref:`Controleer uw resultaten <database-concepts-1>`"

#: ../../docs/training_manual/database_concepts/db_intro.rst:132
msgid "Address Structure"
msgstr "Structuur van een adres"

#: ../../docs/training_manual/database_concepts/db_intro.rst:134
msgid ""
"The properties that describe an address are the columns. The type of "
"information stored in each column is its datatype. In the next section we "
"will analyse our conceptual address table to see how we can make it better!"
msgstr ""
"De eigenschappen die een adres beschrijven zijn de kolommen. Het type "
"informatie dat wordt opgeslagen in elke kolom is het datatype. In het "
"volgende gedeelte zullen we onze conceptuele adrestabel analyseren om te "
"zien hoe we het beter kunnen maken!"

#: ../../docs/training_manual/database_concepts/db_intro.rst:139
msgid "Database Theory"
msgstr "Database theorie"

#: ../../docs/training_manual/database_concepts/db_intro.rst:141
msgid ""
"The process of creating a database involves creating a model of the real "
"world; taking real world concepts and representing them in the database as "
"entities."
msgstr ""
"Het proces van het maken van een database omvat het maken van een model van "
"de echte wereld; concepten uit de echte wereld nemen en die in de database "
"weer te geven als entiteiten."

#: ../../docs/training_manual/database_concepts/db_intro.rst:145
msgid "Normalisation"
msgstr "Normalisatie"

#: ../../docs/training_manual/database_concepts/db_intro.rst:147
msgid ""
"One of the main ideas in a database is to avoid data duplication / "
"redundancy. The process of removing redundancy from a database is called "
"Normalisation."
msgstr ""
"Eén van de belangrijkste ideeën in een database is om duplicatie / herhaling"
" van gegevens te vermijden. Het proces van het verwijderen van herhaling uit"
" een database wordt Normalisatie genoemd."

#: ../../docs/training_manual/database_concepts/db_intro.rst:150
msgid ""
"Normalization is a systematic way of ensuring that a database structure is "
"suitable for general-purpose querying and free of certain undesirable "
"characteristics - insertion, update, and deletion anomalies - that could "
"lead to a loss of data integrity. *- Wikipedia*"
msgstr ""
"Normalisatie is een systematische manier om er voor te zorgen dat een "
"structuur van een database geschikt is voor bevragingen van algemene aard en"
" vrij van bepaalde ongewenste karakteristieken - afwijkingen bij invoegen, "
"bijwerken en verwijderen - die zouden kunnen leiden tot verlies van de "
"integriteit van gegevens. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:155
msgid "There are different kinds of normalisation 'forms'."
msgstr "Er bestaan verschillende 'vormen' van normalisatie. "

#: ../../docs/training_manual/database_concepts/db_intro.rst:157
msgid "Let's take a look at a simple example:"
msgstr "Laten we eens naar een eenvoudig voorbeeld kijken:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:184
msgid ""
"Imagine you have many friends with the same street name or city. Every time "
"this data is duplicated, it consumes space. Worse still, if a city name "
"changes, you have to do a lot of work to update your database."
msgstr ""
"Veronderstel dat u veel vrienden heeft met dezelfde straatnaam of stad. Elke"
" keer dat deze gegevens worden gedupliceerd, nemen zij ruimte in. Erger nog,"
" als een naam van een stad wijzigt, moet u veel werk uitvoeren om uw "
"database bij te werken."

#: ../../docs/training_manual/database_concepts/db_intro.rst:190
msgid ""
"Redesign the theoretical `people` table above to reduce duplication and to "
"normalise the data structure."
msgstr ""
"Ontwerp de bovenstaande theoretische tabel `people` opnieuw om duplicatie te"
" verminderen en de structuur van de gegevens te normaliseren."

#: ../../docs/training_manual/database_concepts/db_intro.rst:193
msgid ""
"You can read more about database normalisation `here "
"<https://en.wikipedia.org/wiki/Database_normalization>`_"
msgstr ""
"U kunt `hier <https://en.wikipedia.org/wiki/Database_normalization>`_ meer "
"lezen over normalisatie van databases"

#: ../../docs/training_manual/database_concepts/db_intro.rst:196
msgid ":ref:`Check your results <database-concepts-2>`"
msgstr ":ref:`Controleer uw resultaten <database-concepts-2>`"

#: ../../docs/training_manual/database_concepts/db_intro.rst:201
msgid "Indexes"
msgstr "Indexen"

#: ../../docs/training_manual/database_concepts/db_intro.rst:203
msgid ""
"A database index is a data structure that improves the speed of data "
"retrieval operations on a database table. *- Wikipedia*"
msgstr ""
"Een index voor een database is een gegevensstructuur die de snelheid van "
"bewerkingen voor het ophalen van gegevens uit een databasetabel verhoogt. *-"
" Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:206
msgid ""
"Imagine you are reading a textbook and looking for the explanation of a "
"concept - and the textbook has no index! You will have to start reading at "
"one cover and work your way through the entire book until you find the "
"information you need. The index at the back of a book helps you to jump "
"quickly to the page with the relevant information:"
msgstr ""
"Veronderstel dat u een tekstboek aan het lezen bent en zoekt naar de uitleg "
"over een concept - en dat het tekstboek geen index heeft! U zult met lezen "
"moeten beginnen bij het voorblad en u geheel door het boek moeten werken "
"totdat u de informatie vindt die u nodig heeft. De index aan het einde van "
"het boek helpt u om snel naar de pagina met de relevante informatie te "
"springen:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:216
msgid "Now searches on name will be faster:"
msgstr "Zoekacties op namen zullen nu sneller zijn:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:235
msgid "Sequences"
msgstr "Reeksen"

#: ../../docs/training_manual/database_concepts/db_intro.rst:237
msgid ""
"A sequence is a unique number generator. It is normally used to create a "
"unique identifier for a column in a table."
msgstr ""
"Een reeks is een generator voor unieke nummers. Het wordt normaal gesproken "
"gebruikt om een unieke identificatie te maken voor een kolom in een tabel."

#: ../../docs/training_manual/database_concepts/db_intro.rst:240
msgid ""
"In this example, id is a sequence - the number is incremented each time a "
"record is added to the table:"
msgstr ""
"In dit voorbeeld is id een reeks - het nummer wordt opgehoogd, elke keer als"
" een record aan de tabel wordt toegevoegd:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:251
msgid "Entity Relationship Diagramming"
msgstr "Entiteit Relaties Diagrammen"

#: ../../docs/training_manual/database_concepts/db_intro.rst:253
msgid ""
"In a normalised database, you typically have many relations (tables). The "
"entity-relationship diagram (ER Diagram) is used to design the logical "
"dependencies between the relations. Consider our non-normalised `people` "
"table from earlier in the lesson:"
msgstr ""
"In een genormaliseerde database heeft u gewoonlijk vele relaties (tabellen)."
" Het entiteit-relatie diagram (ER Diagram) wordt gebruikt om de logische "
"afhankelijkheden tussen de relaties te ontwerpen. Denk aan onze niet-"
"genormaliseerde tabel `people` eerder in deze les:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:268
msgid ""
"With a little work we can split it into two tables, removing the need to "
"repeat the street name for individuals who live in the same street:"
msgstr ""
"Met weinig werk kunnen we die splitsen in twee tabellen, waarbij we de "
"noodzaak om de straatnaam te herhalen voor mensen die in dezelfde straat "
"wonen verwijderen:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:280
msgid "and:"
msgstr "en:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:291
msgid ""
"We can then link the two tables using the 'keys' :kbd:`streets.id` and "
":kbd:`people.streets_id`."
msgstr ""
"We kunnen dan de twee tabellen koppelen met behulp van de 'sleutels' "
":kbd:`streets.id` en :kbd:`people.streets_id`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:294
msgid ""
"If we draw an ER Diagram for these two tables it would look something like "
"this:"
msgstr ""
"Als we een ER Diagram tekenen voor deze twee tabellen zou het er ongeveer zo"
" uitzien:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:300
msgid ""
"The ER Diagram helps us to express 'one to many' relationships. In this case"
" the arrow symbol show that one street can have many people living on it."
msgstr ""
"Het ER Diagram helpt ons om 'één tot veel'-relaties uit te drukken. In dit "
"geval geeft het pijlsymbool aan dat in één straat veel mensen zouden kunnen "
"leven."

#: ../../docs/training_manual/database_concepts/db_intro.rst:304
msgid "|TY| |moderate|"
msgstr "|TY| |moderate|"

#: ../../docs/training_manual/database_concepts/db_intro.rst:306
msgid ""
"Our `people` model still has some normalisation issues - try to see if you "
"can normalise it further and show your thoughts by means of an ER Diagram."
msgstr ""
"Ons model `people` heeft nog steeds enige problemen met normalisatie - "
"probeer eens of u het verder kunt normaliseren en geef uw gedachten weer "
"door middel van een ER Diagram."

#: ../../docs/training_manual/database_concepts/db_intro.rst:309
msgid ":ref:`Check your results <database-concepts-3>`"
msgstr ":ref:`Controleer uw resultaten <database-concepts-3>`"

#: ../../docs/training_manual/database_concepts/db_intro.rst:314
msgid "Constraints, Primary Keys and Foreign Keys"
msgstr "Beperkingen, Primaire sleutels en Vreemde sleutels"

#: ../../docs/training_manual/database_concepts/db_intro.rst:316
msgid ""
"A database constraint is used to ensure that data in a relation matches the "
"modeller's view of how that data should be stored. For example a constraint "
"on your postal code could ensure that the number falls between :kbd:`1000` "
"and :kbd:`9999`."
msgstr ""
"Een beperking voor een database wordt gebruikt om er voor te zorgen dat de "
"gegevens in een relatie overeenkomt met de weergave van het model over hoe "
"die gegevens zouden moeten worden opgeslagen. Een beperking op uw postcode "
"zou er, bijvoorbeeld, voor kunnen zorgen dat de getallen vallen tussen "
":kbd:`1000` en :kbd:`9999`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:321
msgid ""
"A Primary key is one or more field values that make a record unique. Usually"
" the primary key is called id and is a sequence."
msgstr ""
"Een Primaire sleutel zijn één of meer veldwaarden die een record uniek "
"maken. Gewoonlijk wordt de primaire sleutel id genoemd en is een reeks."

#: ../../docs/training_manual/database_concepts/db_intro.rst:324
msgid ""
"A Foreign key is used to refer to a unique record on another table (using "
"that other table's primary key)."
msgstr ""
"Een vreemde sleutel wordt gebruikt om te verwijzen naar een uniek record in "
"een andere tabel (met behulp van de primaire sleutel van de andere tabel)."

#: ../../docs/training_manual/database_concepts/db_intro.rst:327
msgid ""
"In ER Diagramming, the linkage between tables is normally based on Foreign "
"keys linking to Primary keys."
msgstr ""
"In ER Diagrammen wordt de koppeling tussen tabellen gewoonlijk gebaseerd op "
"het koppelen van Vreemde sleutels aan Primaire sleutels."

#: ../../docs/training_manual/database_concepts/db_intro.rst:330
msgid ""
"If we look at our people example, the table definition shows that the street"
" column is a foreign key that references the primary key on the streets "
"table:"
msgstr ""
"Als we naar ons voorbeeld people kijken geeft de definitie van de tabel weer"
" dat de kolom street een vreemde sleutel is die verwijst naar de primaire "
"sleutel van de tabel streets:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:351
msgid "Transactions"
msgstr "Transacties"

#: ../../docs/training_manual/database_concepts/db_intro.rst:353
msgid ""
"When adding, changing, or deleting data in a database, it is always "
"important that the database is left in a good state if something goes wrong."
" Most databases provide a feature called transaction support. Transactions "
"allow you to create a rollback position that you can return to if your "
"modifications to the database did not run as planned."
msgstr ""
"Bij het toevoegen, wijzigen of verwijderen van gegevens in een database, is "
"het altijd belangrijk dat de database in een goede status wordt "
"achtergelaten als er iets fout gaat. De meeste databases verschaffen een "
"mogelijkheid, genaamd ondersteuning voor transacties. Transacties stellen u "
"in staat om een positie vast te stellen voor het terugdraaien waarnaar u "
"kunt terugkeren als de aanpassingen aan de database niet gingen zoals was "
"gepland."

#: ../../docs/training_manual/database_concepts/db_intro.rst:359
msgid ""
"Take a scenario where you have an accounting system. You need to transfer "
"funds from one account and add them to another. The sequence of steps would "
"go like this:"
msgstr ""
"Neem een scenario waar u een boekhoudsysteem heeft. U moet fondsen van de "
"ene rekening transfereren en toevoegen aan de andere rekening. De reeks "
"stappen zou als volgt zijn:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:363
msgid "remove R20 from Joe"
msgstr "verwijder R20 van Joe"

#: ../../docs/training_manual/database_concepts/db_intro.rst:364
msgid "add R20 to Anne"
msgstr "voeg R20 toe aan Anne"

#: ../../docs/training_manual/database_concepts/db_intro.rst:366
msgid ""
"If something goes wrong during the process (e.g. power failure), the "
"transaction will be rolled back."
msgstr ""
"Als er iets misgaat gedurende het proces (bijv. stroomuitval), zal de "
"transactie worden teruggedraaid."

#: ../../docs/training_manual/database_concepts/db_intro.rst:370
msgid "|IC|"
msgstr "|IC|"

#: ../../docs/training_manual/database_concepts/db_intro.rst:372
msgid ""
"Databases allow you to manage data in a structured way using simple code "
"structures."
msgstr ""
"Databases stellen u in staat gegevens op een gestructureerde manier te "
"beheren met behulp van eenvoudige codestructuren."

#: ../../docs/training_manual/database_concepts/db_intro.rst:376
msgid "|WN|"
msgstr "|WN|"

#: ../../docs/training_manual/database_concepts/db_intro.rst:378
msgid ""
"Now that we've looked at how databases work in theory, let's create a new "
"database to implement the theory we've covered."
msgstr ""
"Laten we, nu we hebben gekeken naar hoe databases in theorie werken, een "
"nieuwe database maken om de theorie die we hebben behandeld te "
"implementeren."
